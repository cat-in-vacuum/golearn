package theory

// ------------------------------
//           Планировщики
// ------------------------------

//  Планировщик ОС
// ------------------------------
// Программа - просто набор инструкций, которые выполняются (последовательно) одна за другой  (путь исполнения).
// Для исполнения инструкций ОС использует концепцию потока. Выполнение потока будет происходить
// до тех пор, пока инструкции не закончатся.

// Каждая запущенная программа создает процесс, а к каждому процессу - начальный поток. Каждый поток может
// создавать больше потоков, все потоки могут работать независимо друг от друга и решения по планированию
// принимаются на уровне потоков, а не на уровне процессов.

// Потоки могут работать одновременно - каждый по очереди на отдельном ядре, либо параллельно - каждый работает
// одновременно на разных ядрах. Потоки поддерживают свое состояние, чтобы обеспечить безопасное локальное и
// независимое выполнение инструкций.

// Планировщик ОС отвечает за то, что бы ядра не простаивали, если есть потоки, которые могут выполняться.
// Планировщик создает иллюзию, что все потоки выполняются одновременно.
// Планировщик запускает потоки согласно приоритету потока. + планировщик старается сократить
// задержки при планировании принимая решения.

// Выполнение инструкций
// Счетчик команд, также (instruction pointer) (IP) позволяет потоку отслеживать следующую команду
// для выполнения. В большинстве процессоров IP указывает на следующую инструкцию, а не на текущую

// Состояние потока
// Всего три состояния:
//  - ожидание           - поток ждет чего либо для продолжения (диск, сеть, сис вызовы, мьютексы, атомарные).
//                         все эти вызовы основная причина плохой производительности.

//  - готовность         - поток требует времени выполнения на ядре. Т.е. он уже готов выполнять инструкции
//                         и просит времени у проца. Больше потоков - каждый дольше ждет, очереди для времени выполнения
//                         + сокращается получаемое время, т.к. каждый поток конкурирует за него.
//  - выполнение         - поток размещен на ядре и выполняет инструкции.